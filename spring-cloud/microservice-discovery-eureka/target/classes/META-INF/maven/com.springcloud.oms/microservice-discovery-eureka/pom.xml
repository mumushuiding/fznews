<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.springcloud.oms</groupId>
    <artifactId>spring-cloud</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>microservice-discovery-eureka</artifactId>
  <version>0.0.2-SNAPSHOT</version>
  <name>microservice-discovery-eureka</name>
  <url>http://maven.apache.org</url>
 <!-- Eureka Server  -->
	<dependencies>
	<dependency>
	    <groupId>org.springframework.cloud</groupId>
	      <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
	    </dependency> 
	    <dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<scope>runtime</scope>
			</dependency>
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 打包Docker -->
        <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.4.13</version>
            <executions>
                <execution>
                    <id>build-image</id>
                    <phase>package</phase>
                    <goals>
                        <goal>build</goal>
                    </goals>
                </execution>
            </executions>
			<configuration>
				<!--镜像名，这里用工程名-->
				<imageName>${docker.repostory}/${docker.registry.name}/${project.artifactId}:${project.version}</imageName>
				<!--TAG,这里用工程版本号-->
				<imageTags>
					<imageTag>${project.version}</imageTag>
				</imageTags>
				<!--镜像的FROM，使用java官方镜像-->
				<baseImage>java:8u111-jdk</baseImage>
				<!--该镜像的容器启动后，直接运行spring boot工程-->
				<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
				<forceTags>true</forceTags>
				<!--构建镜像的配置信息-->
				<resources>
					<resource>
						<targetPath>/</targetPath>
						<directory>${project.build.directory}</directory>
						<include>${project.build.finalName}.jar</include>
					</resource>
				</resources>
				<serverId>docker-aliyun</serverId>
				<registryUrl>${docker.repostory}</registryUrl>
				<pushImage>true</pushImage>
			</configuration>
        </plugin>
        </plugins>
        
    </build> 
</project>
